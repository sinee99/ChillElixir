services:
  # 강아지 비문 인식 AI 서비스 (CPU 버전)
  dog-nose-ai:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dog-nose-ai-service
    ports:
      - "5000:5000"
    volumes:
      # 모델 파일들을 읽기 전용으로 마운트
      - ./models:/app/models:ro
      # 로그 파일 저장을 위한 볼륨
      - ./logs:/app/logs
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - PYTHONUNBUFFERED=1
      - CUDA_VISIBLE_DEVICES=""  # CPU 사용 강제
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - dog-nose-network

  # 강아지 비문 인식 AI 서비스 (GPU 버전) - 필요시 주석 해제
  # dog-nose-ai-gpu:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: dog-nose-ai-service-gpu
  #   ports:
  #     - "5001:5000"
  #   volumes:
  #     - ./models:/app/models:ro
  #     - ./logs:/app/logs
  #   environment:
  #     - FLASK_ENV=production
  #     - FLASK_DEBUG=0
  #     - PYTHONUNBUFFERED=1
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: all
  #             capabilities: [gpu]
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 60s
  #   networks:
  #     - dog-nose-network

  # Nginx 리버스 프록시 (선택사항)
  nginx:
    image: nginx:alpine
    container_name: dog-nose-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - dog-nose-ai
    restart: unless-stopped
    networks:
      - dog-nose-network

networks:
  dog-nose-network:
    driver: bridge

volumes:
  models_data:
  logs_data: 