# ============ 빠른 빌드용 멀티스테이지 Dockerfile ============
# 1단계: 기본 이미지 준비
FROM pytorch/pytorch:2.0.1-cuda11.7-cudnn8-runtime as base

WORKDIR /app

# 시스템 패키지 한번에 설치 (최소한만)
RUN apt-get update && apt-get install -y --no-install-recommends \
    libglib2.0-0 libsm6 libxext6 libxrender-dev libgomp1 \
    libgl1-mesa-glx libgthread2.0-0 wget curl \
    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# 2단계: Python 패키지 설치
FROM base as builder

# 캐시된 pip 설치
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# YOLOv5 모델 캐시
RUN python -c "import torch; torch.hub.load('ultralytics/yolov5', 'yolov5s', pretrained=False)" || true

# 3단계: 최종 실행 이미지
FROM builder as runtime

# 애플리케이션 코드 복사 (가장 마지막에)
COPY app.py .

# 모델 디렉토리
RUN mkdir -p models

# 설정
EXPOSE 5000
ENV PYTHONUNBUFFERED=1 CUDA_VISIBLE_DEVICES=0

# 헬스체크
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=2 \
    CMD curl -f http://localhost:5000/health || exit 1

CMD ["python", "app.py"] 